"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1477],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var a=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=a.createContext({}),c=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(r),m=i,b=u["".concat(p,".").concat(m)]||u[m]||s[m]||n;return r?a.createElement(b,o(o({ref:t},d),{},{components:r})):a.createElement(b,o({ref:t},d))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,o=new Array(n);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<n;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},54420:(e,t,r)=>{r.r(t),r.d(t,{frontMatter:()=>l,contentTitle:()=>p,metadata:()=>c,toc:()=>d,default:()=>u});var a=r(22122),i=r(19756),n=(r(67294),r(3905)),o=["components"],l={id:"8bitBoardDep",title:"OpenBCI 8bit Board (no longer in production)"},p=void 0,c={unversionedId:"Deprecated/8bitBoardDep",id:"Deprecated/8bitBoardDep",isDocsHomePage:!1,title:"OpenBCI 8bit Board (no longer in production)",description:"8bit Board Specs:",source:"@site/docs/Deprecated/03-8bitBoard.md",sourceDirName:"Deprecated",slug:"/Deprecated/8bitBoardDep",permalink:"/Documentation/Deprecated/8bitBoardDep",editUrl:"https://github.com/OpenBCI/Documentation/edit/master/websitev2/docs/Deprecated/03-8bitBoard.md",version:"current",lastUpdatedBy:"Richard Waltman",lastUpdatedAt:1627405574,formattedLastUpdatedAt:"7/27/2021",frontMatter:{id:"8bitBoardDep",title:"OpenBCI 8bit Board (no longer in production)"},sidebar:"docs",previous:{title:"Spiderclaw V1 & V2 (deprecated)",permalink:"/Documentation/Deprecated/SpiderclawDep"},next:{title:"Ultracortex Mark 1",permalink:"/Documentation/Deprecated/UltracortexMark1Dep"}},d=[{value:"8bit Board Specs:",id:"8bit-board-specs",children:[]},{value:"Breakout pins:",id:"breakout-pins",children:[]},{value:"Push Button",id:"push-button",children:[]},{value:"Slide Switch",id:"slide-switch",children:[]},{value:"OpenBCI 8bit Board Circuit Schematic",id:"openbci-8bit-board-circuit-schematic",children:[]},{value:"8bit Board PCB Layer Images",id:"8bit-board-pcb-layer-images",children:[]},{value:"8bit Board PCB Files",id:"8bit-board-pcb-files",children:[]}],s={toc:d};function u(e){var t=e.components,l=(0,i.Z)(e,o);return(0,n.kt)("wrapper",(0,a.Z)({},s,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h3",{id:"8bit-board-specs"},"8bit Board Specs:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Power with 6-12V DC Battery ONLY"),(0,n.kt)("li",{parentName:"ul"},"ATmega328P Microcontroller with Arduino UNO bootloader"),(0,n.kt)("li",{parentName:"ul"},"ADS1299 Analog Front End"),(0,n.kt)("li",{parentName:"ul"},"LIS3DH 3 axis Accelerometer"),(0,n.kt)("li",{parentName:"ul"},"RFduino BLE radio"),(0,n.kt)("li",{parentName:"ul"},"Micro SD card slot"),(0,n.kt)("li",{parentName:"ul"},"Voltage Regulation (5V, 3V, +2.5V, -2.5V)"),(0,n.kt)("li",{parentName:"ul"},"SN74LVCC3245A Level Shifter"),(0,n.kt)("li",{parentName:"ul"},'Board Dimensions 2.41" x 2.41" (octagon has 1" edges)'),(0,n.kt)("li",{parentName:"ul"},'Mount holes are 1/16" ID, 0.8" x 2.166" on center')),(0,n.kt)("h3",{id:"breakout-pins"},"Breakout pins:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"ICSP pins on 5V side for bootloading ATmega",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"MISO, MOSI, SCLK, 5V, MCLR, GND"))),(0,n.kt)("li",{parentName:"ul"},"Serial pins for programming RFduino",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"RFTX, RFRX, RFRST, GND"))),(0,n.kt)("li",{parentName:"ul"},"SPI bus pins on the 3V side for Daisy Module expansion",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"DVDD, GND, MISO, MOSI, SCK, CS, CLK, RST"))),(0,n.kt)("li",{parentName:"ul"},"Unused ATmega pins",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"A0, A1, A2, A3, A4, A5, A6, A7")))),(0,n.kt)("p",null,"The SPI bus pins on 3V side include CLK, which is tied to the ADS1299 CLK pin for timing the Daisy Module, and a RST pin which is tied to the ADS1299 MCLR pin for hardware reset of the ADS. The A0 to A5 pins can be used as Analog inputs or Digital Input|Output just like on Arduino UNO. A6 and A7 are Analog input only."),(0,n.kt)("h3",{id:"push-button"},"Push Button"),(0,n.kt)("p",null,"Pushbutton switch is RESET for ATmega."),(0,n.kt)("h3",{id:"slide-switch"},"Slide Switch"),(0,n.kt)("p",null,"Slide switch is power for the board. The slide switch has three positions:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"BLE activates a pull-up on RFduino pin 4")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"OFF disconnects the battery input")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"PC does NOT activate pull-up on RFduino pin 4"),(0,n.kt)("p",{parentName:"li"},"  ",(0,n.kt)("strong",{parentName:"p"},"NOTE: BLE|PC selection is NOT implemented!")))),(0,n.kt)("p",null,"Switching either BLE or PC will produce the same result. The option is available for future development..."),(0,n.kt)("h3",{id:"openbci-8bit-board-circuit-schematic"},"OpenBCI 8bit Board Circuit Schematic"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"OpenBCI 8bit Schematic",src:r(37366).Z})),(0,n.kt)("h3",{id:"8bit-board-pcb-layer-images"},"8bit Board PCB Layer Images"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"8bit PCB LayerTOP",src:r(44055).Z}),"\n",(0,n.kt)("img",{alt:"8bit PCB Layer2",src:r(26879).Z}),"\n",(0,n.kt)("img",{alt:"8bit PCB Layer3",src:r(34570).Z}),"\n",(0,n.kt)("img",{alt:"8bit PCB LayerBOTTOM",src:r(27321).Z})),(0,n.kt)("h3",{id:"8bit-board-pcb-files"},"8bit Board PCB Files"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"http://ultracortex.com/downloads/hardware/OpenBCI_8bit.zip"},"OpenBCI 8bit gerber & BOM (568K zip)")))}u.isMDXComponent=!0},27321:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/OBCI_8bit_layerBottom_noMirror-3c5dde3e6ff4400564a226701a3a46ee.jpg"},34570:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/OBCI_8bit_layerThree-34299cd4d03ec5be93eaf8bc17db2519.jpg"},44055:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/OBCI_8bit_layerTop-f4a1bd85e836503ff4f84780e62558b2.jpg"},26879:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/OBCI_8bit_layerTwo-cdf472abe86bd5edf8dc847c2832961c.jpg"},37366:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/OBCI_V3_8bit-Schematic-83c3da73e332dfdd79afb29f93d58b5f.jpg"}}]);